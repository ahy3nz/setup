import os
from optparse import OptionParser
"""
Write out the simulated tempering mpd file based on the filename
and desired max/min temperatures for ST


"""
parser = OptionParser()
parser.add_option("-f", action="store", type="string", default = "somebilayer", dest = "filename")
parser.add_option("--max", action="store", type="float", default = "325",  dest = "maxtemp")
parser.add_option("--min", action="store", type="float", default = "305", dest = "mintemp")
(options, args) = parser.parse_args()

outfile = open('ST_{}.mdp'.format(options.filename),'w')


outfile.write(';title                       = Simulated Tempering Run\n')
outfile.write('; Run parameters\n')
outfile.write('integrator                  = md-vv\n')
outfile.write('nsteps                      = 25000000     ; 50ns\n')
outfile.write('dt                          = 0.002\n')
#outfile.write('comm-mode                   = linear\n')
#outfile.write('nst-comm                    = 1\n')
#outfile.write('comm-grps                   = non-water water\n')
#outfile.write('comm-grps                   = system\n')
outfile.write('\n')
outfile.write('; Output control\n')
outfile.write('nstxout                     = 0             ; Dont save coordinates \n')
outfile.write('nstvout                     = 0             ; Dont save velocities\n')
outfile.write('nstenergy                   = 5000\n')
outfile.write('nstlog                      = 5000\n')
outfile.write('nstxtcout                   = 5000\n')
outfile.write('\n')
outfile.write(';bond parameters\n')
outfile.write('continuation                = yes\n')
outfile.write('constraint_algorithm        = lincs ;lincs\n')
outfile.write('constraints                 = hbonds\n')
outfile.write('lincs_iter                  = 1\n')
outfile.write('lincs_order                 = 4\n')
outfile.write('\n')
outfile.write('; Neighbor searching\n')
outfile.write('cutoff-scheme               = Verlet\n')
outfile.write('ns_type                     = grid\n')
outfile.write('nstlist                     = 10\n')
outfile.write('rcoulomb                    = 1.4\n')
outfile.write('rvdw                        = 1.4\n')
outfile.write('\n')
outfile.write(';Electrostatics\n')
outfile.write('coulombtype                 = PME\n')
outfile.write('pme_order                   = 4\n')
outfile.write('fourierspacing              = 0.16\n')
outfile.write('\n')
outfile.write('; Temperature coupling\n')
outfile.write('tcoupl                      = v-rescale ;v-rescale\n')
outfile.write('tc-grps                     = non-water water    \n')
outfile.write('tau_t                       = 0.1   0.1     \n')
outfile.write('ref_t                       = 305   305     \n')
outfile.write('\n')
outfile.write(';Pressure coupling\n')
outfile.write('pcoupl                      = berendsen;berendsen\n')
outfile.write('pcoupltype                  = semiisotropic\n')
outfile.write('tau_p                       = 1.0           ; ps\n')
outfile.write('ref_p                       = 1.0 1.0          ; bar   \n')
outfile.write('compressibility             = 4.5e-5 4.5e-5\n')
outfile.write('refcoord_scaling            = com\n')
outfile.write('\n')
outfile.write(';PBC\n')
outfile.write('pbc                         = xyz\n')
outfile.write('\n')
outfile.write(';Dispersion correction\n')
outfile.write('DispCorr                    =EnerPres\n')
outfile.write('\n')
outfile.write(';Velocity generation\n')
outfile.write('gen_vel                     = no\n')
outfile.write('\n')
outfile.write(';Simulated tempering\n')
outfile.write('nstexpanded = 2400\n')
outfile.write('simulated-tempering = yes\n')
outfile.write('sim-temp-low = {}\n'.format(options.mintemp))
outfile.write('sim-temp-high = {}\n'.format(options.maxtemp))
outfile.write('simulated-tempering-scaling = linear\n')
outfile.write('init_lambda_state = 0\n')
outfile.write('temperature_lambdas = 0.00 0.05 0.10 0.15 0.20 0.25 0.30 0.35 0.40 0.45 0.50 0.55 0.60 0.65 0.70 0.75 0.80 0.85 0.90 0.95 1.00\n')
outfile.write('lmc-stats = wang-landau\n')
outfile.write('lmc-move = metropolized-gibbs\n')
outfile.write('lmc-weights-equil = wl-delta\n')
outfile.write('weight-equil-wl-delta = 0.001\n')
outfile.write('wl-scale = 0.7\n')
outfile.write('wl-ratio = 0.8\n')
outfile.write('init-wl-delta = 1.0\n')
outfile.write('wl-oneovert = yes\n')
outfile.close()
